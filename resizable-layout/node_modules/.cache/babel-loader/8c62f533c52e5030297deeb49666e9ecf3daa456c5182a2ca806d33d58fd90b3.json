{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Layout App\\\\resizable-layout\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Resizable } from 'react-resizable';\nimport axios from 'axios';\nimport './App.css'; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Layout = () => {\n  _s();\n  const [sizes, setSizes] = useState([300, 300, 400]);\n  const [totalCount, setTotalCount] = useState(0); // New state for total count\n  const [inputValues, setInputValues] = useState({\n    component1: '',\n    component2: '',\n    component3: ''\n  });\n  const handleResize = (index, {\n    size\n  }) => {\n    const newSizes = [...sizes];\n    newSizes[index] = size.width;\n    setSizes(newSizes);\n  };\n  const handleInputChange = (event, componentName) => {\n    const {\n      value\n    } = event.target;\n    setInputValues(prevState => ({\n      ...prevState,\n      [componentName]: value\n    }));\n    setInputModified(true);\n  };\n  const handleAddData = index => {\n    const inputValue = inputValues[Object.keys(inputValues)[index]];\n    // Check if input value is not empty and input is modified\n    if (inputValue.trim() !== '' && inputModified) {\n      axios.post('http://localhost:3001/api/add', {\n        [Object.keys(inputValues)[index]]: inputValue\n      }).then(response => {\n        const {\n          totalCount\n        } = response.data;\n        setTotalCount(totalCount);\n        setInputModified(false); // Reset input modification flag\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    } else {\n      // If input value is empty or input is not modified, clear the input field\n      setInputValues(prevState => ({\n        ...prevState,\n        [Object.keys(inputValues)[index]]: ''\n      }));\n    }\n  };\n  const handleUpdateData = index => {\n    const inputValue = inputValues[Object.keys(inputValues)[index]];\n    // Check if input value is not empty\n    if (inputValue.trim() !== '') {\n      axios.post('http://localhost:3001/api/update', {\n        [Object.keys(inputValues)[index]]: inputValue\n      }).then(response => {\n        const {\n          totalCount\n        } = response.data;\n        setTotalCount(totalCount);\n        // Update the input field with the edited data\n        setInputValues(prevState => ({\n          ...prevState,\n          [Object.keys(inputValues)[index]]: inputValue\n        }));\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    } else {\n      // If input value is empty, do nothing\n      console.log('Input value is empty');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(Resizable, {\n        width: sizes[0],\n        height: Infinity,\n        onResize: (e, data) => handleResize(0, data),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resizable-component\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Component 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputValues.component1,\n              onChange: e => handleInputChange(e, 'component1')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button1\",\n              onClick: () => handleAddData(0),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button1\",\n              onClick: () => handleUpdateData(0),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Resizable, {\n        width: sizes[1],\n        height: Infinity,\n        onResize: (e, data) => handleResize(1, data),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resizable-component\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Component 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputValues.component2,\n              onChange: e => handleInputChange(e, 'component2')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button1\",\n              onClick: () => handleAddData(1),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button1\",\n              onClick: () => handleUpdateData(1),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Resizable, {\n      width: sizes[2],\n      height: Infinity,\n      onResize: (e, data) => handleResize(2, data),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resizable-component\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Component 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValues.component3,\n            onChange: e => handleInputChange(e, 'component3')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button1\",\n            onClick: () => handleAddData(2),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button1\",\n            onClick: () => handleUpdateData(2),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Count: \", totalCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Layout, \"NXdchyj4wgUWQFK02qmAOKqo5L0=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","Resizable","axios","jsxDEV","_jsxDEV","Layout","_s","sizes","setSizes","totalCount","setTotalCount","inputValues","setInputValues","component1","component2","component3","handleResize","index","size","newSizes","width","handleInputChange","event","componentName","value","target","prevState","setInputModified","handleAddData","inputValue","Object","keys","trim","inputModified","post","then","response","data","catch","error","console","handleUpdateData","log","className","children","height","Infinity","onResize","e","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/Project/Layout App/resizable-layout/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Resizable } from 'react-resizable';\nimport axios from 'axios';\n\nimport './App.css'; // Import CSS file\n\nconst Layout = () => {\n  const [sizes, setSizes] = useState([300, 300, 400]);\n  const [totalCount, setTotalCount] = useState(0); // New state for total count\n  const [inputValues, setInputValues] = useState({\n    component1: '',\n    component2: '',\n    component3: ''\n  });\n\n  const handleResize = (index, { size }) => {\n    const newSizes = [...sizes];\n    newSizes[index] = size.width;\n    setSizes(newSizes);\n  };\n\n  const handleInputChange = (event, componentName) => {\n    const { value } = event.target;\n    setInputValues(prevState => ({\n      ...prevState,\n      [componentName]: value\n    }));\n    setInputModified(true);\n  };\n\n  const handleAddData = (index) => {\n    const inputValue = inputValues[Object.keys(inputValues)[index]];\n    // Check if input value is not empty and input is modified\n    if (inputValue.trim() !== '' && inputModified) {\n      axios.post('http://localhost:3001/api/add', { [Object.keys(inputValues)[index]]: inputValue })\n        .then(response => {\n          const { totalCount } = response.data;\n          setTotalCount(totalCount);\n          setInputModified(false); // Reset input modification flag\n        })\n        .catch(error => {\n          console.error('Error:', error);\n        });\n    } else {\n      // If input value is empty or input is not modified, clear the input field\n      setInputValues(prevState => ({\n        ...prevState,\n        [Object.keys(inputValues)[index]]: ''\n      }));\n    }\n  };\n   \n\n  const handleUpdateData = (index) => {\n    const inputValue = inputValues[Object.keys(inputValues)[index]];\n    // Check if input value is not empty\n    if (inputValue.trim() !== '') {\n      axios.post('http://localhost:3001/api/update', { [Object.keys(inputValues)[index]]: inputValue })\n        .then(response => {\n          const { totalCount } = response.data;\n          setTotalCount(totalCount);\n          // Update the input field with the edited data\n          setInputValues(prevState => ({\n            ...prevState,\n            [Object.keys(inputValues)[index]]: inputValue\n          }));\n        })\n        .catch(error => {\n          console.error('Error:', error);\n        });\n    } else {\n      // If input value is empty, do nothing\n      console.log('Input value is empty');\n    }\n  };\n  \n\n  return (\n    <div className=\"container\">\n      <div className=\"flex-container\">\n        <Resizable\n          width={sizes[0]}\n          height={Infinity}\n          onResize={(e, data) => handleResize(0, data)}\n        >\n          <div className=\"resizable-component\">\n            <h1>Component 1</h1>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                value={inputValues.component1}\n                onChange={(e) => handleInputChange(e, 'component1')}\n              />\n            </div>\n            <div className=\"button-container\">\n              <button className='button1' onClick={() => handleAddData(0)}>Add</button>\n              <button className='button1' onClick={() => handleUpdateData(0)}>Update</button>\n            </div>\n          </div>\n        </Resizable>\n        <Resizable\n          width={sizes[1]}\n          height={Infinity}\n          onResize={(e, data) => handleResize(1, data)}\n        >\n          <div className=\"resizable-component\">\n            <h1>Component 2</h1>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                value={inputValues.component2}\n                onChange={(e) => handleInputChange(e, 'component2')}\n              />\n            </div>\n            <div className=\"button-container\">\n              <button className='button1' onClick={() => handleAddData(1)}>Add</button>\n              <button className='button1' onClick={() => handleUpdateData(1)}>Update</button>\n            </div>\n          </div>\n        </Resizable>\n      </div>\n      <Resizable\n        width={sizes[2]}\n        height={Infinity}\n        onResize={(e, data) => handleResize(2, data)}\n      >\n        <div className=\"resizable-component\">\n          <h1>Component 3</h1>\n          <div className=\"input-container\">\n            <input\n              type=\"text\"\n              value={inputValues.component3}\n              onChange={(e) => handleInputChange(e, 'component3')}\n            />\n          </div>\n          <div className=\"button-container\">\n            <button className='button1' onClick={() => handleAddData(2)}>Add</button>\n            <button className='button1' onClick={() => handleUpdateData(2)}>Update</button>\n          </div>\n        </div>\n      </Resizable>\n      <div className=\"button-container\">\n        <p>Total Count: {totalCount}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}