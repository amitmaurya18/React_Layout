{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Layout App\\\\resizable-layout\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Resizable } from 'react-resizable';\nimport axios from 'axios';\nimport './App.css'; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Layout = () => {\n  _s();\n  const [sizes, setSizes] = useState([300, 300, 400]);\n  const [operationCount, setOperationCount] = useState(0); // New state for operation count\n  const [inputValues, setInputValues] = useState({\n    component1: '',\n    component2: '',\n    component3: ''\n  });\n  useEffect(() => {\n    // Fetch initial operation count value when component mounts\n    fetchCount();\n  }, []);\n  const handleResize = (index, {\n    size\n  }) => {\n    const newSizes = [...sizes];\n    newSizes[index] = size.width;\n    setSizes(newSizes);\n  };\n  const handleInputChange = (event, componentName) => {\n    const {\n      value\n    } = event.target;\n    setInputValues(prevState => ({\n      ...prevState,\n      [componentName]: value\n    }));\n  };\n  const handleAddOrUpdate = operation => {\n    // Combine add and update handlers\n    axios.post(`http://localhost:3001/api/data/${operation}`, inputValues).then(response => {\n      console.log(response.data);\n      setInputValues({\n        component1: '',\n        component2: '',\n        component3: ''\n      });\n      fetchCount(); // Update count after successful operation\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const fetchCount = () => {\n    axios.get('http://localhost:3001/api/count').then(response => {\n      const {\n        totalCount\n      } = response.data; // Assuming the API returns a single total count\n      setOperationCount(totalCount);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(Resizable, {\n        width: sizes[0],\n        height: Infinity,\n        onResize: (e, data) => handleResize(0, data),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resizable-component\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Component 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValues.component1,\n            onChange: e => handleInputChange(e, 'component1'),\n            style: {\n              width: '100%',\n              height: '100%',\n              border: 'none',\n              outline: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Resizable, {\n        width: sizes[1],\n        height: Infinity,\n        onResize: (e, data) => handleResize(1, data),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resizable-component\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Component 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValues.component2,\n            onChange: e => handleInputChange(e, 'component2'),\n            style: {\n              width: '100%',\n              height: '100%',\n              border: 'none',\n              outline: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Resizable, {\n      width: sizes[2],\n      height: Infinity,\n      onResize: (e, data) => handleResize(2, data),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resizable-component\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Component 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValues.component3,\n          onChange: e => handleInputChange(e, 'component3'),\n          style: {\n            width: '100%',\n            height: '100%',\n            border: 'none',\n            outline: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddOrUpdate('add'),\n        children: \"Add Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddOrUpdate('update'),\n        children: \"Update Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Count: \", operationCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Layout, \"gJIG2fmSGFwtoVc2yxSRV70PVJM=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","useEffect","Resizable","axios","jsxDEV","_jsxDEV","Layout","_s","sizes","setSizes","operationCount","setOperationCount","inputValues","setInputValues","component1","component2","component3","fetchCount","handleResize","index","size","newSizes","width","handleInputChange","event","componentName","value","target","prevState","handleAddOrUpdate","operation","post","then","response","console","log","data","catch","error","get","totalCount","className","children","height","Infinity","onResize","e","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","style","border","outline","onClick","_c","$RefreshReg$"],"sources":["D:/Project/Layout App/resizable-layout/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Resizable } from 'react-resizable';\nimport axios from 'axios';\n\nimport './App.css'; // Import CSS file\n\nconst Layout = () => {\n  const [sizes, setSizes] = useState([300, 300, 400]);\n  const [operationCount, setOperationCount] = useState(0); // New state for operation count\n  const [inputValues, setInputValues] = useState({\n    component1: '',\n    component2: '',\n    component3: ''\n  });\n\n  useEffect(() => {\n    // Fetch initial operation count value when component mounts\n    fetchCount();\n  }, []);\n\n  const handleResize = (index, { size }) => {\n    const newSizes = [...sizes];\n    newSizes[index] = size.width;\n    setSizes(newSizes);\n  };\n\n  const handleInputChange = (event, componentName) => {\n    const { value } = event.target;\n    setInputValues(prevState => ({\n      ...prevState,\n      [componentName]: value\n    }));\n  };\n\n  const handleAddOrUpdate = (operation) => { // Combine add and update handlers\n    axios.post(`http://localhost:3001/api/data/${operation}`, inputValues)\n      .then(response => {\n        console.log(response.data);\n        setInputValues({\n          component1: '',\n          component2: '',\n          component3: ''\n        });\n        fetchCount(); // Update count after successful operation\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  const fetchCount = () => {\n    axios.get('http://localhost:3001/api/count')\n      .then(response => {\n        const { totalCount } = response.data; // Assuming the API returns a single total count\n        setOperationCount(totalCount);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"flex-container\">\n        <Resizable\n          width={sizes[0]}\n          height={Infinity}\n          onResize={(e, data) => handleResize(0, data)}\n        >\n          <div className=\"resizable-component\">\n            <h1>Component 1</h1>\n            <input\n              type=\"text\"\n              value={inputValues.component1}\n              onChange={(e) => handleInputChange(e, 'component1')}\n              style={{ width: '100%', height: '100%', border: 'none', outline: 'none' }}\n            />\n          </div>\n        </Resizable>\n        <Resizable\n          width={sizes[1]}\n          height={Infinity}\n          onResize={(e, data) => handleResize(1, data)}\n        >\n          <div className=\"resizable-component\">\n            <h1>Component 2</h1>\n            <input\n              type=\"text\"\n              value={inputValues.component2}\n              onChange={(e) => handleInputChange(e, 'component2')}\n              style={{ width: '100%', height: '100%', border: 'none', outline: 'none' }}\n            />\n          </div>\n        </Resizable>\n      </div>\n      <Resizable\n        width={sizes[2]}\n        height={Infinity}\n        onResize={(e, data) => handleResize(2, data)}\n      >\n        <div className=\"resizable-component\">\n          <h1>Component 3</h1>\n          <input\n            type=\"text\"\n            value={inputValues.component3}\n            onChange={(e) => handleInputChange(e, 'component3')}\n            style={{ width: '100%', height: '100%', border: 'none', outline: 'none' }}\n          />\n        </div>\n      </Resizable>\n      <div className=\"button-container\">\n        <button onClick={() => handleAddOrUpdate('add')}>Add Data</button>\n        <button onClick={() => handleAddOrUpdate('update')}>Update Data</button>\n        <p>Count: {operationCount}</p> {/* Displaying the total count */}\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}